@@ -17,8 +17,17 @@
         this.pieces = pieces;
     }
 
+    /** Add a new piece to the board. **/
     public void addPiece(Piece piece) {
-        pieces.add(piece);
+        if (validate(piece.getCoordinatesX(), piece.getCoordinatesY())) {
+            for (Piece p : pieces) {
+                if (p.getCoordinatesX() == piece.getCoordinatesX()
+                        && p.getCoordinatesY() == piece.getCoordinatesY()) {
+                    return;
+                }
+            }
+            pieces.add(piece);
+        }
     }
 
     public boolean validate(int x, int y) {
@@ -26,13 +35,24 @@
     }
 
     public void removeAt(int x, int y) {
-        pieces.removeIf(i -> i.getX() == x && i.getY() == y);
+        pieces.removeIf(i -> i.getCoordinatesX() == x && i.getCoordinatesY() == y);
+    }
+
+    /** Move piece to (x, y) axis. **/
+    public void movePiece(Piece piece, int x, int y) {
+        for (Piece p : pieces) {
+            if (p.getCoordinatesX() == piece.getCoordinatesX()
+                    && p.getCoordinatesY() == piece.getCoordinatesY()) {
+                p.setCoordinatesX(x);
+                p.setCoordinatesY(y);
+            }
+        }
     }
 
     /** Return the piece at (x, y) axis. **/
     public Piece getAt(int x, int y) {
         for (Piece i : pieces) {
-            if (i.getX() == x && i.getY() == y) {
+            if (i.getCoordinatesX() == x && i.getCoordinatesY() == y) {
                 return i;
             }
         }
