@@ -30,35 +30,35 @@
      */
     @Override
     public boolean canMove(Board board, int x, int y) {
-        if (this.getX() != x && this.getY() != y) {
+        if (!board.validate(x, y)) {
             return false;
-        } else if (this.getX() == x) {
-            int start;
-            int end;
-            if (this.getY() > y) {
-                end = this.getY();
-                start = y;
-            } else {
-                start = this.getY();
-                end = y;
-            }
-            for (int i = start + 1; i < end; i++) {
-                if (board.getAt(x, i) != null) return false;
-            }
+        }
+        if (this.getCoordinatesX() != x && this.getCoordinatesY() != y) {
+            return false;
+        }
+        if (this.getCoordinatesX() == x && this.getCoordinatesY() == y) {
+            return false;
         } else {
-            int start;
-            int end;
-            if (this.getX() > x) {
-                end = this.getX();
-                start = x;
+            if (this.getCoordinatesX() == x) {
+                int tempY = this.getCoordinatesY();
+                for (int i = Math.min(tempY, y) + 1; i < Math.max(tempY, y); i++) {
+                    if (board.getAt(x, i) != null) {
+                        return false;
+                    }
+                }
             } else {
-                start = this.getX();
-                end = x;
-            }
-            for (int i = start + 1; i < end; i++) {
-                if (board.getAt(i, y) != null) return false;
+                int tempX = this.getCoordinatesX();
+                for (int i = Math.min(tempX, x) + 1; i < Math.max(tempX, x); i++) {
+                    if (board.getAt(i, y) != null) {
+                        return false;
+                    }
+                }
             }
         }
-        return true;
+        if (board.getAt(x, y) == null) {
+            return true;
+        } else {
+            return !board.getAt(x, y).getColor().equals(this.getColor());
+        }
     }
 }
