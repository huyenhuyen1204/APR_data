@@ -1,56 +1,48 @@
+import java.text.DecimalFormat;
 import java.util.ArrayList;
 
 public class Account {
     private double balance;
-    private ArrayList<Transaction> transactionList;
+    private ArrayList<Transaction> transitionList = new ArrayList<>();
 
     private void deposit(double amount) {
-        if (amount <= 0) {
-            System.out.println("So tien ban  nap vao khong hop le!");
-            return;
-        }
-
-        balance += amount;
+        if (amount <= 0)
+            System.out.println("So tien ban nap vao khong hop le!");
+        else
+            balance += amount;
     }
 
     private void withdraw(double amount) {
-        if (amount <= 0) {
+        if (amount <= 0)
             System.out.println("So tien ban rut ra khong hop le!");
-            return;
-        }
-
-        if (amount > balance) {
-            System.out.println("So tien ban rut vuot qua so du!");
-            return;
-        }
-
-        balance -= amount;
+        else if (amount > balance)
+                System.out.println("So tien ban rut vuot qua so du!");
+            else balance -= amount;
     }
 
     public void addTransaction(double amount, String operation) {
-        if (!(operation.equals("deposit") || operation.equals(Transaction.WITHDRAW))) {
+        if (!(operation.equals("deposit") || operation.equals("withdraw")))
             System.out.println("Yeu cau khong hop le!");
-            return;
-        }
-
-        if (operation.equals("deposit")) {
+        else if (operation.equals("deposit")) {
             deposit(amount);
             if (amount > 0)
-                    transactionList.add(new Transaction(Transaction.DEPOSIT, amount, balance));
-            return;
+                    transitionList.add(new Transaction("Nap tien", amount, balance));
+        } else {
+            withdraw(amount);
+            if ((amount > 0) && (amount <= balance))
+                transitionList.add(new Transaction("Rut tien", amount, balance));
         }
-
-        withdraw(amount);
-        if ((amount > 0) && (amount <= balance))
-            transactionList.add(new Transaction(Transaction.WITHDRAW, amount, balance));
     }
 
     public void printTransaction() {
-        for (int i = 0; i < transactionList.size(); i++) {
-            double tempAmount = Math.round(transactionList.get(i).getAmount() * 100) / 100;
-            double tempBalance = Math.round(transactionList.get(i).getBalance() * 100) / 100;
-            System.out.println("Giao dich " + i + ": " + transactionList.get(i).getOperation()
-            + " $" + tempAmount + ". " + "So du luc nay: $" + tempBalance + ".");
+        for (int i = 0; i < transitionList.size(); i++) {
+//            if (transitionList.get(i).getOperation().equals("deposit")) transitionList.get(i).setOperation("Nap tien");
+//            else transitionList.get(i).setOperation("Rut tien");
+            DecimalFormat df = new DecimalFormat("#.00");
+            double tempAmount = (double) Math.round(transitionList.get(i).getAmount() * 100) / 100;
+            double tempBalance = (double) Math.round(transitionList.get(i).getBalance() * 100) / 100;
+            System.out.println("Giao dich " + (i + 1) + ": " + transitionList.get(i).getOperation()
+            + " $" + df.format(tempAmount) + ". " + "So du luc nay: $" + df.format(tempBalance) + ".");
         }
     }
 }
