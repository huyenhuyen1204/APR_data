@@ -3,13 +3,13 @@
 public class Account {
 
     private double balance;
-    private ArrayList<Transaction> transactionArrayList = new ArrayList<>();
+    private ArrayList<Transaction> transitionList = new ArrayList<>();
 
     /**
      * Diposit function.
      * @param amount money
      */
-    private void diposit(double amount) {
+    private void deposit(double amount) {
 
         if (amount <= 0) {
             System.out.println("So tien ban nap vao khong hop le!");
@@ -42,7 +42,7 @@
 
     /**
      * Add new transaction.
-     * @param amount money
+     * @param amount    money
      * @param operation transaction type
      */
     public void addTransaction(double amount, String operation) {
@@ -53,12 +53,12 @@
         }
 
         if (operation.equals(Transaction.DEPOSIT)) {
-            diposit(amount);
+            deposit(amount);
         } else if (operation.equals(Transaction.WITHDRAW)) {
             withdraw(amount);
         }
 
-        transactionArrayList.add(new Transaction(operation, amount, this.balance));
+        transitionList.add(new Transaction(operation, amount, this.balance));
 
     }
 
@@ -67,9 +67,9 @@
      */
     public void printTransaction() {
 
-        for (int i = 0; i < transactionArrayList.size(); i++) {
-            Transaction transaction = transactionArrayList.get(i);
-            String operation = (transaction.equals(Transaction.WITHDRAW))
+        for (int i = 0; i < transitionList.size(); i++) {
+            Transaction transaction = transitionList.get(i);
+            String operation = (transaction.getOperation().equals(Transaction.WITHDRAW))
                     ? "Rut tien" : "Nap tien";
             System.out.printf("Giao dich %d: %s $%.2f. So du luc nay: $%.2f.\n", i + 1, operation,
                     transaction.getAmount(), transaction.getBalance());
