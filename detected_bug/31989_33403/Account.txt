@@ -1,64 +1,59 @@
 
 
 import java.util.ArrayList;
+import java.math.BigDecimal;
+import java.math.RoundingMode;
+import java.text.DecimalFormat;
+import java.text.NumberFormat;
+import java.util.ArrayList;
 import java.util.List;
+import java.util.Locale;
 
 public class Account {
-    private double balance = 0;
-    private List<Transaction> transactions = new ArrayList<>();
-    private void deposit(double amount){
-        if(amount > 0) {
-            this.balance += amount;
-        } else {
-            System.out.println("So tien ban nap vao khong hop le!");
-        }
-    }
+    private double balance;
+    private ArrayList<Transaction> transitionList = new ArrayList<Transaction>();
 
-    public Account() {
+    private void deposit(double amount){
+        if(amount<=0) {
+            System.out.print("So tien ban nap vao khong hop le!");
+        }
+        else balance+=amount;
     }
 
     private void withdraw(double amount){
-        if(amount > 0) {
-            if(this.balance >= amount) {
-                this.balance -= amount;
-            } else {
-                System.out.println("So tien ban rut vuot qua so du!");
-            }
-        } else {
-            System.out.println("So tien ban rut ra khong hop le!");
+        if(amount<=0) {
+            System.out.print("So tien ban rut ra khong hop le!");
         }
+        else if(amount>balance){
+            System.out.print("So tien ban rut vuot qua so du!");
+        }
+        else balance-=amount;
     }
+
     public void addTransaction(double amount, String operation){
-        if(operation.equals(Transaction.DEPOSIT)){
-            transactions.add(new Transaction(operation,amount,this.balance));
-            deposit(amount);
-        } else if(operation.equals(Transaction.WITHDRAW)){
-            transactions.add(new Transaction(operation,amount,this.balance));
-            withdraw(amount);
-        } else {
+        if(!operation.equals(Transaction.WITHDRAW) && !operation.equals(Transaction.DEPOSIT)) {
             System.out.println("Yeu cau khong hop le!");
-        }
-    }
-    public void printTransaction(){
-        int i = 0;
-        String m;
-        while(!transactions.isEmpty()){
-            double k = Math.round(transactions.get(i).getAmount() * 100.0) / 100.0;
-            if(transactions.get(i).getOperation().equals(Transaction.DEPOSIT)) {
-                double b = Math.round((transactions.get(i).getBalance() + k) * 100.0) / 100.0;
-                System.out.println("Giao dich " + (i + 1) + ": Nap tien " + k + ". So du luc nay: " + b);
-            } else if(transactions.get(i).getOperation().equals(Transaction.WITHDRAW)){
-                double b = Math.round((transactions.get(i).getBalance() - k) * 100.0) / 100.0;
-                System.out.println("Giao dich " + (i + 1) + ": Rut tien " + k + ". So du luc nay: " + b);
+        } else {
+            if(operation.equals(Transaction.DEPOSIT)) {
+                deposit(amount);
+            } else {
+                withdraw(amount);
             }
-            i++;
+            Transaction add = new Transaction(operation,amount,balance);
+            transitionList.add(add);
         }
     }
 
-    public static void main(String[] args) {
-        Account acc= new Account();
-        acc.addTransaction(2000.255,"deposit");
-        acc.addTransaction(1000,"withdraw");
-        acc.printTransaction();
+    public void  printTransaction() {
+        for (int i=0; i<transitionList.size(); i++) {
+            if (transitionList.get(i).getOperation().equals(Transaction.DEPOSIT)) {
+                System.out.printf("Giao dich %d: Nap tien $%.2f. So du luc nay: $%.2f.\n", i+1 , transitionList.get(i).getAmount(), transitionList.get(i).getBalance());
+            }
+            if (transitionList.get(i).getOperation().equals(Transaction.WITHDRAW)) {
+                System.out.printf("Giao dich %d: Rut tien $%.2f. So du luc nay: $%.2f.\n", i+1 , transitionList.get(i).getAmount(), transitionList.get(i).getBalance());
+            }
+        }
     }
+
+
 }
