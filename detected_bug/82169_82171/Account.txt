@@ -3,7 +3,7 @@
 public class Account {
 
     private double balance;
-    private ArrayList<Transaction> transactions = new ArrayList<>();
+    private ArrayList<Transaction> transitionList = new ArrayList<>();
 
     private void deposit(double amount) {
         if (amount <= 0) {
@@ -23,26 +23,33 @@
         }
     }
 
+    /**
+     * ...
+     */
     public void addTransaction(double amount, String operation) {
         if (operation.equals(Transaction.DEPOSIT)) {
             deposit(amount);
-            transactions.add(new Transaction(operation, amount, this.balance));
+            transitionList.add(new Transaction(operation, amount, this.balance));
         } else if (operation.equals(Transaction.WITHDRAW)) {
             withdraw(amount);
-            transactions.add(new Transaction(operation, amount, this.balance));
+            transitionList.add(new Transaction(operation, amount, this.balance));
         } else {
             System.out.println("Yeu cau khong hop le!");
         }
     }
 
+    /**
+     * ...
+     */
     public void printTransaction() {
         String deposit = "Nap tien";
         String withdraw = "Rut tien";
-        for (int i = 0; i < transactions.size(); i++) {
-            System.out.printf("Giao dich %s: %s $%.2f. So du luc nay: %.2f.\n", i + 1,
-                    (transactions.get(i).getOperation().equals(Transaction.DEPOSIT) ? deposit : withdraw),
-                    transactions.get(i).getAmount(),
-                    transactions.get(i).getBalance());
+        for (int i = 0; i < transitionList.size(); i++) {
+            System.out.printf("Giao dich %s: %s $%.2f. So du luc nay: $%.2f.\n", i + 1,
+                    (transitionList.get(i).getOperation().equals(Transaction.DEPOSIT)
+                            ? deposit : withdraw),
+                    transitionList.get(i).getAmount(),
+                    transitionList.get(i).getBalance());
         }
     }
 
