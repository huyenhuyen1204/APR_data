@@ -14,6 +14,10 @@
 
     @Override
     public boolean canMove(Board board, int x, int y) {
+        if (!board.validate(x, y)) {
+            return false;
+        }
+
         int coordinatesX = this.getCoordinatesX();
         int coordinatesY = this.getCoordinatesY();
         int rangeX = Math.abs(x - coordinatesX);
@@ -27,33 +31,30 @@
             int factorX = (x - coordinatesX) / rangeX;
 
             for (int i = 1; i < rangeX; i++) {
-                String key = (coordinatesX + factorX * i) + ";" + coordinatesY;
-                if (board.mapPieces.containsKey(key)) {
+                int keyX = coordinatesX + factorX * i;
+                if (board.getAt(keyX, coordinatesY) != null) {
                     return false;
                 }
             }
 
-            Piece value = board.mapPieces.get(x + ";" + y);
-            if (value != null) {
-                if (value.getColor().equals(this.getColor())) {
-                    return false;
-                }
+            Piece res = board.getAt(x, y);
+            if (res != null) {
+                return !this.getColor().equals(res.getColor());
             }
+
         } else if (rangeY != 0) {
             int factorY = (y - coordinatesY) / rangeY;
 
             for (int i = 1; i < rangeY; i++) {
-                String key = coordinatesX  + ";" + (coordinatesY + factorY * i);
-                if (board.mapPieces.containsKey(key)) {
+                int keyY = coordinatesY + factorY * i;
+                if (board.getAt(coordinatesX, keyY) != null) {
                     return false;
                 }
             }
 
-            Piece value = board.mapPieces.get(x + ";" + y);
-            if (value != null) {
-                if (value.getColor().equals(this.getColor())) {
-                    return false;
-                }
+            Piece res = board.getAt(x, y);
+            if (res != null) {
+                return !this.getColor().equals(res.getColor());
             }
         }
 
