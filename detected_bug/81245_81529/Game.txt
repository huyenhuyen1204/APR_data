@@ -2,41 +2,52 @@
 
 public class Game {
     private Board board;
-    private ArrayList<Move> moveHistory;
+    private ArrayList<Move> moveHistory = new ArrayList<>();
 
     public Game(Board board) {
         this.board = board;
     }
 
+    /**
+     * move piece.
+     * @param piece piece.
+     * @param x coordinates x.
+     * @param y coordinates y.
+     */
     public void movePiece(Piece piece, int x, int y) {
-        if (piece instanceof Rook) {
-            Rook rook = (Rook) piece;
-            if (rook.canMove(this.board, x, y)) {
-                int startX = piece.getCoordinatesX();
-                int startY = piece.getCoordinatesY();
+        if (piece.canMove(this.board, x, y)) {
+            int startX = piece.getCoordinatesX();
+            int startY = piece.getCoordinatesY();
 
-                Piece value = board.mapPieces.get(x + ";" + y);
-                if (value != null) {
-                    Move movePiece = new Move(startX, x, startY, y, piece, value);
-                    moveHistory.add(movePiece);
-                    this.board.removeAt(x, y);
-                    this.board.addPiece(piece);
-                    return;
-                }
-
-                Move movePiece = new Move(startX, x, startY, y, piece);
+            Piece res = this.board.getAt(x, y);
+            if (res != null) {
+                Move movePiece = new Move(startX, x, startY, y, piece, res);
                 moveHistory.add(movePiece);
                 this.board.removeAt(x, y);
-                this.board.addPiece(piece);
+
+            } else {
+                Move movePiece = new Move(startX, x, startY, y, piece);
+                moveHistory.add(movePiece);
+
             }
+
+            piece.setCoordinatesX(x);
+            piece.setCoordinatesY(y);
+
         }
+
     }
 
     public Board getBoard() {
         return board;
     }
 
+    public void setBoard(Board board) {
+        this.board = board;
+    }
+
     public ArrayList<Move> getMoveHistory() {
         return moveHistory;
     }
+
 }
