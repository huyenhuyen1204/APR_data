@@ -5,18 +5,25 @@
     public static final int HEIGHT = 8;
     private ArrayList<Piece> pieces = new ArrayList<>();
 
+    /**
+     * Method.
+     */
     public boolean validate(int x, int y) {
-        if ((x > 1 && x < 8) && (y > 1 && y < 8)) {
+        if ((x >= 1 && x <= 8) && (y >= 1 && y <= 8)) {
             return true;
         }
         return false;
     }
 
+    /**
+     * method.
+     */
+
     public void addPiece(Piece piece) {
         int count = 0;
         for (int i = 0; i < pieces.size(); i++) {
             if (piece.getCoordinatesX() != pieces.get(i).getCoordinatesX()
-            && piece.getCoordinatesY() != pieces.get(i).getCoordinatesY()) {
+            || piece.getCoordinatesY() != pieces.get(i).getCoordinatesY()) {
                 count++;
             }
         }
@@ -27,6 +34,10 @@
         }
     }
 
+    /**
+     * method.
+     */
+
     public Piece getAt(int x, int y) {
         for (int i = 0; i < pieces.size(); i++) {
             if (x == pieces.get(i).getCoordinatesX() && y == pieces.get(i).getCoordinatesY()) {
@@ -36,6 +47,10 @@
         return null;
     }
 
+    /**
+     * method.
+     */
+
     public void removeAt(int x, int y) {
         for (int i = 0; i < pieces.size(); i++) {
             if (x == pieces.get(i).getCoordinatesX() && y == pieces.get(i).getCoordinatesY()) {
