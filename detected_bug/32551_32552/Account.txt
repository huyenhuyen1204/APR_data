@@ -3,7 +3,7 @@
 public class Account {
     private double balance = 0;  //Thuộc tính thông tin về số dư tài khoản ngân hàng balance, có kiểu là double
 
-//Một danh sách các giao dịch (sử dụng ArrayList) để theo dõi các thao tác nạp tiền, rút tiền ( vì lịch sử giao dịch chỉ được sử dụng ở phương thức printTransaction()).
+    //Một danh sách các giao dịch (sử dụng ArrayList) để theo dõi các thao tác nạp tiền, rút tiền ( vì lịch sử giao dịch chỉ được sử dụng ở phương thức printTransaction()).
     private ArrayList<Transaction> transitionList;
 
     public Account() {
@@ -25,10 +25,10 @@
             System.out.println("So tien ban rut ra khong hop le!");
         } else if (amount > this.balance) {
             System.out.println("So tien ban rut vuot qua so du!");
-          }     else {
-                     this.balance = this.balance - amount;
-                     transitionList.add(new Transaction(Transaction.WITHDRAW, amount, this.balance));
-                }
+        }     else {
+            this.balance = this.balance - amount;
+            transitionList.add(new Transaction(Transaction.WITHDRAW, amount, this.balance));
+        }
     }
 
     public void addTransaction(double amount, String operation) {
@@ -36,20 +36,21 @@
             deposit(amount);
         } else if (operation.equals(Transaction.WITHDRAW)) {
             withdraw(amount);
-               } else {
-                    System.out.println("Yeu cau khong hop le!");
-                 }
+        } else {
+            System.out.println("Yeu cau khong hop le!");
+        }
     }
 
+
     public void printTransaction() {
-        this.balance = Math.round( getBalance() * 100.0 ) / 100.0;
+        this.balance = Math.round(getBalance() * 100.0) / 100.0;
 
         for (int i = 0; i < transitionList.size(); i++) {
             double gd1 = Math.round(transitionList.get(i).getBalance() * 100.0) / 100.0;
             double du1 = Math.round(transitionList.get(i).getAmount() * 100.0) / 100.0;
 
-            double gd2 = Math.round(transitionList.get(i).getBalance() * 100.0) / 100.0;
-            double du2 = Math.round(transitionList.get(i).getAmount() * 100.0) / 100.0;
+            double gd2 = Math.round(transitionList.get(i).getBalance());
+            double du2 = Math.round(transitionList.get(i).getAmount());
 
             String balance = String.valueOf((gd1 == gd2) ? gd2 + "0" : gd1);
             String amount = String.valueOf((du1 == du2) ? du2 + "0" : du1);
@@ -61,17 +62,10 @@
             }
         }
     }
+
     public double getBalance() {
         return balance;
     }
 
-    public static void main(String[] args) {
-        Account acc = new Account();
-        acc.addTransaction(3000.68, "deposit");
-        acc.addTransaction(3000.00, "deposit");
-        acc.addTransaction(1000.00, "withdraw");
-        acc.addTransaction(2000.00, "withdraw");
-        acc.printTransaction();
-    }
 
 }
