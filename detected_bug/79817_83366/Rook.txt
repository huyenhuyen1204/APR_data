@@ -1,6 +1,3 @@
-/**
- * Created by CCNE on 19/11/2020.
- */
 public class Rook extends Piece {
     public Rook(int x, int y) {
         super(x, y);
@@ -14,45 +11,81 @@
         return "R";
     }
 
+    /**canMove.*/
     public boolean canMove(Board board, int x, int y) {
-        for (int i = x; i < 8; i++) {
-            if (board.getAt(i + 1, y) != null) {
-                if (board.getAt(i + 1, y).getColor() != board.getAt(x, y).getColor()) {
-                    return true;
-                } else
-                    return false;
-            }
-            return true;
+        int count;
+        if (!board.validate(x, y) || (this.getCoordinatesX() == x && this.getCoordinatesY() == y)) {
+            return false;
         }
-
-        for (int i = 0; i < x; i++) {
-            if (board.getAt(i, y) != null) {
-                if (board.getAt(i, y).getColor() != board.getAt(x, y).getColor()) {
-                    return true;
-                } else
+        if (this.getCoordinatesX() == x) {
+            if (this.getCoordinatesY() < y) {
+                count = 0;
+                for (int i = this.getCoordinatesY(); i < y - 1; i++) {
+                    if (board.getAt(x, i + 1) != null) {
+                        count++;
+                    }
+                }
+                if (count > 0) {
                     return false;
+                } else {
+                    if (board.getAt(x, y) != null
+                            && board.getAt(x, y).getColor().equals(this.getColor())) {
+                        return false;
+                    }
+                    return true;
+                }
+            } else {
+                count = 0;
+                for (int i = this.getCoordinatesY(); i > y + 1; i--) {
+                    if (board.getAt(x, i - 1) != null) {
+                        count++;
+                    }
+                }
+                if (count > 0) {
+                    return false;
+                } else {
+                    if (board.getAt(x, y) != null
+                            && board.getAt(x, y).getColor().equals(this.getColor())) {
+                        return false;
+                    }
+                    return true;
+                }
             }
-            return true;
         }
-
-        for (int i = y; i < 8; i++) {
-            if (board.getAt(x, i + 1) != null) {
-                if (board.getAt(x, i + 1).getColor() != board.getAt(x, y).getColor()) {
-                    return true;
-                } else
+        if (this.getCoordinatesY() == y) {
+            if (this.getCoordinatesX() < x) {
+                count = 0;
+                for (int i = this.getCoordinatesX(); i < x - 1; i++) {
+                    if (board.getAt(i + 1, y) != null) {
+                        count++;
+                    }
+                }
+                if (count > 0) {
                     return false;
-            }
-            return true;
-        }
-
-        for (int i = 0; i < y; i++) {
-            if (board.getAt(x, i) != null) {
-                if (board.getAt(x, 0).getColor() != board.getAt(x, y).getColor()) {
+                } else {
+                    if (board.getAt(x, y) != null
+                            && board.getAt(x, y).getColor().equals(this.getColor())) {
+                        return false;
+                    }
                     return true;
-                } else
+                }
+            } else {
+                count = 0;
+                for (int i = this.getCoordinatesX(); i > x + 1; i--) {
+                    if (board.getAt(i - 1, y) != null) {
+                        count++;
+                    }
+                }
+                if (count > 0) {
                     return false;
+                } else {
+                    if (board.getAt(x, y) != null
+                            && board.getAt(x, y).getColor().equals(this.getColor())) {
+                        return false;
+                    }
+                    return true;
+                }
             }
-            return true;
         }
         return false;
     }
