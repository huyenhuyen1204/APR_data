@@ -23,7 +23,7 @@
     public void addPiece(Piece piece) {
         if (validate(piece.getCoordinatesX(), piece.getCoordinatesY())
             && getAt(piece.getCoordinatesX(), piece.getCoordinatesY()) == null) {
-            this.pieces.add(piece);
+            pieces.add(piece);
         }
     }
 
@@ -34,7 +34,7 @@
      * @return .
      */
     public boolean validate(int x, int y) {
-        return x >= 1 && y <= 8;
+        return (x >= 1 && x <= 8) && (y >= 1 && y <= 8);
     }
 
     /**
@@ -46,7 +46,7 @@
     public Piece getAt(int x, int y) {
         for (Piece piece : this.pieces) {
             if (piece.getCoordinatesX() == x
-                    && piece.getCoordinatesX() == y) {
+                    && piece.getCoordinatesY() == y) {
                 return piece;
             }
         }
@@ -59,10 +59,10 @@
      * @param y .
      */
     public void removeAt(int x, int y) {
-        for (Piece piece : this.pieces) {
-            if (piece.getCoordinatesX() == x
-                    && piece.getCoordinatesX() == y) {
-                this.pieces.remove(piece);
+        for (int i = 0; i < pieces.size(); i++) {
+            if (pieces.get(i).getCoordinatesX() == x
+                    && pieces.get(i).getCoordinatesY() == y) {
+                pieces.remove(i);
             }
         }
     }
