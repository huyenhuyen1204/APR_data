@@ -3,7 +3,6 @@
 import java.io.InputStream;
 import java.io.InputStreamReader;
 import java.util.ArrayList;
-import java.util.Arrays;
 import java.util.List;
 
 /**
@@ -12,6 +11,7 @@
 public class Bank {
     private List<Customer> customerList = new ArrayList<>();
 
+    /** Initialize. */
     public void readCustomerList(InputStream inputStream) {
         try {
             BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream));
@@ -20,7 +20,7 @@
             while ((line = reader.readLine()) != null && !line.isEmpty()) {
                 if ((!line.contains("CHECKING") && !line.contains("SAVINGS"))) {
                     int tmp = line.lastIndexOf(" ");
-                    String fullName = line.substring(tmp);
+                    String fullName = line.substring(0, tmp);
                     long idNumber = Long.parseLong(line.substring(tmp + 1));
 
                     customer = new Customer(idNumber, fullName);
@@ -40,19 +40,20 @@
                 }
             }
             reader.close();
-        } catch(IOException e) {
+        } catch (IOException e) {
             System.out.println(e.getMessage());
         }
     }
 
+    /** Name order. */
     public String getCustomersInfoByNameOrder() {
         StringBuilder result = new StringBuilder();
         for (int i = 0; i < customerList.size(); i++) {
             for (int j = i; j > 0; j--) {
-                if (Customer.NAME_ORDER.compare(customerList.get(j), customerList.get(i)) < 0) {
-                    Customer tmp = customerList.get(i);
-                    customerList.set(i, customerList.get(j));
-                    customerList.set(j, tmp);
+                if (Customer.NAME_ORDER.compare(customerList.get(j), customerList.get(j - 1)) < 0) {
+                    Customer tmp = customerList.get(j);
+                    customerList.set(j, customerList.get(j - 1));
+                    customerList.set(j - 1, tmp);
                 }
             }
         }
@@ -63,14 +64,15 @@
         return result.toString().trim();
     }
 
+    /** Id order. */
     public String getCustomersInfoByIdOrder() {
         StringBuilder result = new StringBuilder();
         for (int i = 0; i < customerList.size(); i++) {
             for (int j = i; j > 0; j--) {
-                if (Customer.ID_ORDER.compare(customerList.get(j), customerList.get(i)) < 0) {
-                    Customer tmp = customerList.get(i);
-                    customerList.set(i, customerList.get(j));
-                    customerList.set(j, tmp);
+                if (Customer.ID_ORDER.compare(customerList.get(j), customerList.get(j - 1)) < 0) {
+                    Customer tmp = customerList.get(j);
+                    customerList.set(j, customerList.get(j - 1));
+                    customerList.set(j - 1, tmp);
                 }
             }
         }
